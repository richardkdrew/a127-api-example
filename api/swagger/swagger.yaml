swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /v1
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config: {}
x-a127-services: 
# simple quota example that only allows 2 requests per minute
  quota:     
    provider: volos-quota-memory
    options:
      timeUnit: minute
      interval: 1
      allow: 2 
paths:
  /exampleresources:
    x-swagger-router-controller: example_resources
    x-a127-apply: 
      quota: {}
    get:
      tags:
        - ExampleResources
      summary: Finds all example resources.
      description: 'Returns a list of `Example Resource` items'
      operationId: getExampleResources
      produces:
        - application/json
      parameters:
        - in: query
          name: limit
          description: The number of items to retrieve (per page. Defaults to 10)
          required: false
          type: integer
          format: int32
          default: 10
        - in: query
          name: offset
          description: The number of items to offset by (to get the next/previous page. Defaults to 0 - the first page)
          required: false
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ExampleResourcesResponse"
        "500":
          description: Invalid limit or offset supplied
          schema: {}
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /exampleresources/{id}:
    x-swagger-router-controller: example_resources
    x-a127-apply: 
      quota: {}
    get:
      tags:
        - ExampleResources
      summary: Finds a single example resources item using the id supplied.
      description: 'Returns a single `Example Resource` item'
      operationId: getExampleResourceById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The id of the `Example Resource` to retrieve
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ExampleResource"
        "404":
          description: Example Resource not found
          schema: {}
        "500":
          description: Invalid Example Resource ID supplied
          schema: {}
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
# response object defintions (includes paging, arrays of entities, etc...
  ExampleResourcesResponse:
    type: object
    description: The response for an `Example Resource` get request
    required:
      - paging
      - resources
    properties:
      paging:
        $ref: '#/definitions/Paging'
      resources:
        type: array
        description: List of `Example Resource` items
        items:
          $ref: '#/definitions/ExampleResource'
# entities schema definitions
  ExampleResource:
    type: object
    description: An `Example Resource` item
    required:
      - id
      - title
    properties:
      id: 
        type: integer
        format: int64
        description: The id for the `Example Resource`
      title:
        type: string
        description: The title for the `Example Resource`
    
# general schema definitions
  Paging:
    type: object
    description: The paging details for the response
    required:
      - limit
      - offset
      - total
    properties:
      limit: 
        type: integer
        format: int32
        description: The number of results returned (per page)
      offset: 
        type: integer
        format: int32
        description: The position the resutls start at (the page number)
      total: 
        type: integer
        format: int64
        description: The total number of items available that meet the criteria supplied (number of results)
  ErrorResponse:
    description: The error details for the response
    required:
      - message
    properties:
      message:
        type: string
